<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Balance;
use App\Bill;
use App\Income;

class MoneyController extends Controller
{
  public function index ()

  {$balances = Balance::orderBy('amount')->get();
    $bills = Bill::orderBy('amount')->get();
    $incomes = Income::orderBy('amount')->get();
    $result = Balance::orderBy('updated_at','desc')->first();

        return view('balance')->with([
            'balances' => $balances,
          'bills' => $bills,
            'incomes' => $incomes,
    'result' => $result,

    ]);
  }

  public function store ()

  {return view ('main');

  }

  public function pastdata ()
  {

    $balances = Balance::orderBy('amount')->get();
$bills = Bill::orderBy('amount')->get();
$incomes = Income::orderBy('amount')->get();

      return view('past')->with([
          'balances' => $balances,
          'bills' => $bills,
              'incomes' => $incomes,

          ]);
    ##return view ('past');
  }

  public function balanceval(Request $request)
  {
    $this->validate($request, [
      'amount' => 'required|min:1|numeric',
      'date' => 'required|date',
    ]);
    $balance = new Balance();
    $balance->amount = $request->input('amount');
    $balance->date = $request->input('date');
    $balance->save();

    return view('balance');
    ##return redirect('/balance')->with('alert', 'The amount '.$request->input('amount').' was added.');
  }

  public function bills(Request $request)
  {
    $this->validate($request, [
      'amount' => 'required|min:1|numeric',
      'due' => 'required|min:1',
      'source' => 'required|min:1',]);
    $bill = new Bill();
    $bill->amount = $request->input('amount');
    $bill->due = $request->input('due');
    $bill->source = $request->input('source');
    $bill->paid = $request->input('paid');
    $bill->save();
    return view ('blank');
  }

  public function incomes(Request $request)
  {
    $this->validate($request, [
      'amount' => 'required|min:1|numeric',
      'daterecieved' => 'required|min:1',
      'source' => 'required|min:1',]);
    $income = new Income();
    $income->amount = $request->input('amount');
    $income->daterecieved = $request->input('daterecieved');
    $income->source = $request->input('source');
    $income->save();
    return view ('blank');
  }

  public function practice6()
  {
$result = Balance::orderBy('updated_at','desc')->first();
  dump($result->toArray());
  return view ('blank')->with([
    'result' => $result,
      ]);
  }


}
